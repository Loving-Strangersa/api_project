{"name": "test_play[case1]", "status": "broken", "statusDetails": {"message": "AttributeError: 'dict' object has no attribute 'encode'", "trace": "self = <test_cases.test_paly.Test_paly object at 0x000002EEE84A40D0>\ncase = {'api_url': '/playurl/v3/play/playurl', 'check_jsonpath_contId': '$.body.content.contId', 'check_jsonpath_contName': '$.body.content.contName', 'check_re': None, ...}\n\n    @pytest.mark.parametrize(\"case\",cases)\n    def test_play(self, case):\n        logger.info(\"用例开始执行,用例{}:{}\".format(case[\"id\"], case[\"title\"]))\n    \n        # 数据替换,替换Excel中request_data中contId 正则表达式 (?<=contId=).*?(?=&)\n        # case = replace_mark_with_data(cases,\"#contId#\",\"661543514\")\n    \n        # 发起请求\n>       response = send_request(method=case[\"method\"], url=case[\"api_url\"], data=case[\"request_data\"])\n\ntest_cases\\test_paly.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmethod = 'get', url = 'http://pc.miguvideo.com/playurl/v3/play/playurl'\ndata = 'contId=123456&ott=true&rateType=&ott=false', token = None\n\n    def send_request(method, url, data=None, token=None):\n        headers = __hand_header(token)\n        url = __get_url(url)\n        data = __get_json_data(data)\n    \n        # 配合proxies，开启fiddler抓包\n        if method.upper() == 'GET':\n            # verify 是否验证服务器的SSL证书\n            # proxies 开启代理调试\n            response = requests.get(url, params=data, headers=headers, verify=False, proxies=None)\n    \n        elif method.upper() == 'POST':\n            response = requests.post(url, json=data, headers=headers, verify=False, proxies=None)\n    \n        logger.info('响应状态码为:{}'.format(response.status_code))\n        # 不是json数据则报错,待优化\n        logger.info('响应内容为:{}'.format(response.json()))\n    \n        # allure\n        # debug = {'http': 'http://localhost:8888', 'https': 'http://localhost:8888'}\n>       allure.attach(headers.encode(encoding=\"utf-8\",errors=\"strict\"), \"请求方法\", allure.attachment_type.TEXT)\nE       AttributeError: 'dict' object has no attribute 'encode'\n\ncommon\\handle_request.py:84: AttributeError"}, "parameters": [{"name": "case", "value": "{'id': 2, 'title': '请求contId为123456\\n非正常节目id', 'method': 'get', 'api_url': '/playurl/v3/play/playurl', 'request_data': 'contId=123456&ott=true&rateType=&ott=false', 'expected': '{\\n    \"code\": \"400\",\\n    \"rid\": \"PROGRAM_OFFLINE\",\\n    \"playCode\": \"404001002\",\\n    \"respId\": \"bcd2fefeec5eacd75810f40f40dfabe2_DjKuJA7M0P7Esdmb78O3ww==\",\\n    \"info\": null,\\n    \"message\": \"节目已下线，请尝试其他节目\",\\n    \"httpmessage\": null,\\n    \"timeStamp\": 1614221774968,\\n    \"body\": {\\n        \"content\": null,\\n        \"playBill\": null,\\n        \"auth\": null,\\n        \"urlInfo\": null,\\n        \"urlInfos\": null,\\n        \"mediaFiles\": null,\\n        \"degradeRateInfo\": null,\\n        \"priceInfo\": null,\\n        \"clientAction\": null,\\n        \"terminal\": null,\\n        \"advertInfo\": {\\n            \"isAdvert\": \"1\",\\n            \"toast\": \"\",\\n            \"playLengths\": null,\\n            \"reason\": null,\\n            \"source\": \"\"\\n        },\\n        \"startRate\": null,\\n        \"cpinfo\": null,\\n        \"dolbyUrlInfo\": null,\\n        \"gslbCdn\": null\\n    }\\n}', 'check_sql': None, 'check_jsonpath_contId': '$.body.content.contId', 'check_jsonpath_contName': '$.body.content.contName', 'check_re': None}"}], "start": 1623927045250, "stop": 1623927045285, "uuid": "58199c57-ba89-4202-9021-9c9968ae7bdf", "historyId": "9ac44b3fb195a2ae7e88e08d908faa98", "testCaseId": "ee410dde69c0cbc8d0749e68a9971b87", "fullName": "test_cases.test_paly.Test_paly#test_play", "labels": [{"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_paly"}, {"name": "subSuite", "value": "Test_paly"}, {"name": "host", "value": "DESKTOP-V4MS4DA"}, {"name": "thread", "value": "20400-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_paly"}]}