{
  "uid" : "a755a95a04fb2cec",
  "name" : "test_play[case4]",
  "fullName" : "test_cases.test_paly.Test_paly#test_play",
  "historyId" : "7238b03ede9f6e41718078b84aadc809",
  "time" : {
    "start" : 1623998196230,
    "stop" : 1623998196279,
    "duration" : 49
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '400001005' == '400'\n  - 400\n  + 400001005",
  "statusTrace" : "self = <test_cases.test_paly.Test_paly object at 0x000001F21716B130>\ncase = {'api_url': '/playurl/v3/play/playurl', 'check_jsonpath_contId': '$.body.content.contId', 'check_jsonpath_contName': '$.body.content.contName', 'check_re': None, ...}\n\n    @pytest.mark.parametrize(\"case\",cases)\n    def test_play(self, case):\n        logger.info(\"用例开始执行,用例{}:{}\".format(case[\"id\"], case[\"title\"]))\n    \n        # 数据替换,替换Excel中request_data中contId 正则表达式 (?<=contId=).*?(?=&)\n        # case = replace_mark_with_data(cases,\"#contId#\",\"661543514\")\n    \n        # 发起请求\n        response = send_request(method=case[\"method\"], url=case[\"api_url\"], data=case[\"request_data\"])\n    \n        # 将Excel的json转为dict\n        expected = json.loads(case[\"expected\"])\n        logger.info(\"期望结果为{}\".format(expected))\n    \n        # 读取Excel中的jsonpath\n        check_jsonpath_contid = case[\"check_jsonpath_contId\"]\n        check_jsonpath_contname = case[\"check_jsonpath_contName\"]\n        logger.info(\"本次jsonpath请求contId为:{}，contName为{}\".format(check_jsonpath_contid, check_jsonpath_contname))\n    \n        # 对code contId contName 进行断言\n>       assert response.json()[\"code\"] == expected[\"code\"]\nE       AssertionError: assert '400001005' == '400'\nE         - 400\nE         + 400001005\n\ntest_cases\\test_paly.py:62: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1623998195867,
      "stop" : 1623998195867,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '400001005' == '400'\n  - 400\n  + 400001005",
    "statusTrace" : "self = <test_cases.test_paly.Test_paly object at 0x000001F21716B130>\ncase = {'api_url': '/playurl/v3/play/playurl', 'check_jsonpath_contId': '$.body.content.contId', 'check_jsonpath_contName': '$.body.content.contName', 'check_re': None, ...}\n\n    @pytest.mark.parametrize(\"case\",cases)\n    def test_play(self, case):\n        logger.info(\"用例开始执行,用例{}:{}\".format(case[\"id\"], case[\"title\"]))\n    \n        # 数据替换,替换Excel中request_data中contId 正则表达式 (?<=contId=).*?(?=&)\n        # case = replace_mark_with_data(cases,\"#contId#\",\"661543514\")\n    \n        # 发起请求\n        response = send_request(method=case[\"method\"], url=case[\"api_url\"], data=case[\"request_data\"])\n    \n        # 将Excel的json转为dict\n        expected = json.loads(case[\"expected\"])\n        logger.info(\"期望结果为{}\".format(expected))\n    \n        # 读取Excel中的jsonpath\n        check_jsonpath_contid = case[\"check_jsonpath_contId\"]\n        check_jsonpath_contname = case[\"check_jsonpath_contName\"]\n        logger.info(\"本次jsonpath请求contId为:{}，contName为{}\".format(check_jsonpath_contid, check_jsonpath_contname))\n    \n        # 对code contId contName 进行断言\n>       assert response.json()[\"code\"] == expected[\"code\"]\nE       AssertionError: assert '400001005' == '400'\nE         - 400\nE         + 400001005\n\ntest_cases\\test_paly.py:62: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "42cbb67df3b97ab8",
      "name" : "请求地址",
      "source" : "42cbb67df3b97ab8.txt",
      "type" : "text/plain",
      "size" : 47
    }, {
      "uid" : "b55d14410aa12c3c",
      "name" : "请求头",
      "source" : "b55d14410aa12c3c.txt",
      "type" : "text/plain",
      "size" : 133
    }, {
      "uid" : "229cc9a9ba9afcaf",
      "name" : "请求方法",
      "source" : "229cc9a9ba9afcaf.txt",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "7bd3e87135843a18",
      "name" : "请求参数",
      "source" : "7bd3e87135843a18.txt",
      "type" : "text/plain",
      "size" : 4
    }, {
      "uid" : "cfcf6209a99b5065",
      "name" : "反回状态码",
      "source" : "cfcf6209a99b5065.txt",
      "type" : "text/plain",
      "size" : 3
    }, {
      "uid" : "75ce8e32bcdcb9a8",
      "name" : "响应结果",
      "source" : "75ce8e32bcdcb9a8.txt",
      "type" : "text/plain",
      "size" : 588
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 6,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1623998196441,
      "stop" : 1623998196441,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_cases"
  }, {
    "name" : "suite",
    "value" : "test_paly"
  }, {
    "name" : "subSuite",
    "value" : "Test_paly"
  }, {
    "name" : "host",
    "value" : "LAPTOP-L7B50IS8"
  }, {
    "name" : "thread",
    "value" : "8432-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cases.test_paly"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'id': 5, 'title': '请求contId为123456\\n非正常节目id', 'method': 'get', 'api_url': '/playurl/v3/play/playurl', 'request_data': {'rewardable': True, 'setting': {'description': '小礼物走一走，来简书关注我', 'default_amount': 200}, 'total_rewards_count': 0, 'reward_buyers': []}, 'expected': '{\\n    \"code\": \"400\",\\n    \"rid\": \"PROGRAM_OFFLINE\",\\n    \"playCode\": \"404001002\",\\n    \"respId\": \"bcd2fefeec5eacd75810f40f40dfabe2_DjKuJA7M0P7Esdmb78O3ww==\",\\n    \"info\": null,\\n    \"message\": \"节目已下线，请尝试其他节目\",\\n    \"httpmessage\": null,\\n    \"timeStamp\": 1614221774968,\\n    \"body\": {\\n        \"content\": null,\\n        \"playBill\": null,\\n        \"auth\": null,\\n        \"urlInfo\": null,\\n        \"urlInfos\": null,\\n        \"mediaFiles\": null,\\n        \"degradeRateInfo\": null,\\n        \"priceInfo\": null,\\n        \"clientAction\": null,\\n        \"terminal\": null,\\n        \"advertInfo\": {\\n            \"isAdvert\": \"1\",\\n            \"toast\": \"\",\\n            \"playLengths\": null,\\n            \"reason\": null,\\n            \"source\": \"\"\\n        },\\n        \"startRate\": null,\\n        \"cpinfo\": null,\\n        \"dolbyUrlInfo\": null,\\n        \"gslbCdn\": null\\n    }\\n}', 'check_sql': None, 'check_jsonpath_contId': '$.body.content.contId', 'check_jsonpath_contName': '$.body.content.contName', 'check_re': None}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "a755a95a04fb2cec.json",
  "parameterValues" : [ "{'id': 5, 'title': '请求contId为123456\\n非正常节目id', 'method': 'get', 'api_url': '/playurl/v3/play/playurl', 'request_data': {'rewardable': True, 'setting': {'description': '小礼物走一走，来简书关注我', 'default_amount': 200}, 'total_rewards_count': 0, 'reward_buyers': []}, 'expected': '{\\n    \"code\": \"400\",\\n    \"rid\": \"PROGRAM_OFFLINE\",\\n    \"playCode\": \"404001002\",\\n    \"respId\": \"bcd2fefeec5eacd75810f40f40dfabe2_DjKuJA7M0P7Esdmb78O3ww==\",\\n    \"info\": null,\\n    \"message\": \"节目已下线，请尝试其他节目\",\\n    \"httpmessage\": null,\\n    \"timeStamp\": 1614221774968,\\n    \"body\": {\\n        \"content\": null,\\n        \"playBill\": null,\\n        \"auth\": null,\\n        \"urlInfo\": null,\\n        \"urlInfos\": null,\\n        \"mediaFiles\": null,\\n        \"degradeRateInfo\": null,\\n        \"priceInfo\": null,\\n        \"clientAction\": null,\\n        \"terminal\": null,\\n        \"advertInfo\": {\\n            \"isAdvert\": \"1\",\\n            \"toast\": \"\",\\n            \"playLengths\": null,\\n            \"reason\": null,\\n            \"source\": \"\"\\n        },\\n        \"startRate\": null,\\n        \"cpinfo\": null,\\n        \"dolbyUrlInfo\": null,\\n        \"gslbCdn\": null\\n    }\\n}', 'check_sql': None, 'check_jsonpath_contId': '$.body.content.contId', 'check_jsonpath_contName': '$.body.content.contName', 'check_re': None}" ]
}